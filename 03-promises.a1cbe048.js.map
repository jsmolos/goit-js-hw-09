{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAExC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACPH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAiBTR,EAAOgB,iBAAiB,UAdxB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOjB,EAAQkB,OAChC,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAASgB,MAAOC,IACnChB,EAAcgB,EAAGH,GAChBI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBV,EAAA0B,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBV,EAAA0B,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAU,IAElEW,GAAcC,OAAOhB,EAAOiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n  if (shouldResolve) {\n    resolve({ position, delay });\n  } else {\n    reject({ position, delay });\n  }\n}, delay);\n});\n}\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(delayEl.value);\n  for (let i = 1; i <= amountEl.value; i++) {\n    createPromise(i, delayValue)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n});\ndelayValue += Number(stepEl.value);\n  }\n}\nformEl.addEventListener('submit', handleSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.a1cbe048.js.map"}